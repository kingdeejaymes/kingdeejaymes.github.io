{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/log-form/log-form.component.ts","./src/app/components/log-form/log-form.component.html","./src/app/components/logs/logs.component.ts","./src/app/components/logs/logs.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/log.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'devlogger';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <app-log-form></app-log-form>\n  <app-logs></app-logs>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LogFormComponent } from './components/log-form/log-form.component';\nimport { LogsComponent } from './components/logs/logs.component';\nimport { LogService } from '../app/services/log.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LogFormComponent,\n    LogsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [LogService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Log } from '../../models/Log';\nimport { LogService } from '../../services/log.service';\n\n@Component({\n  selector: 'app-log-form',\n  templateUrl: './log-form.component.html',\n  styleUrls: ['./log-form.component.css']\n})\nexport class LogFormComponent implements OnInit {\n  \n  id: string;\n  text: string;\n  date: any;\n  isNewLog: boolean = true;\n\n  constructor(private logService: LogService) { }\n\n  ngOnInit(): void {\n    this.logService.selectedLog.subscribe(log => {\n      console.log('Log ==>', log);\n      if (log.id != null) {\n        this.isNewLog = false;\n        this.id = log.id;\n        this.text = log.text;\n        this.date = log.date;\n      }\n    });\n  }\n\n  onSubmit() {\n    if (this.isNewLog) {\n      const newLog = {\n        id: this.generateId(),\n        text: this.text,\n        date: new Date()\n      };\n\n      // call Service to add log\n      this.logService.addLog(newLog);//.subscribe(log => {});\n    }\n    else {\n      const updateLog = {\n        id: this.id,\n        text: this.text,\n        date: new Date()\n      };\n\n      // call Service to update log\n      this.logService.updateLog(updateLog);//.subscribe(log => {});\n    }\n\n    this.clearState();\n    \n  }\n\n  clearState() {\n    this.isNewLog = true;\n    this.id = '';\n    this.text = '';\n    this.date = '';\n    this.logService.clearState();\n  }\n\n  generateId() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n}\n","<div class=\"card card-body mb-3\">\n    <form (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n            <input type=\"text\" name=\"text\" [(ngModel)]=\"text\" class=\"form-control\" placeholder=\"Add a log..\">\n        </div>\n        <input type=\"submit\" value=\"Add Log\" class=\"btn btn-dark\" [disabled]=\"!this.text\">\n        <button (click)=\"clearState()\" type=\"button\" class=\"btn btn-warning\" [hidden]=\"!this.text\">Clear</button>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Log } from '../../models/Log';\nimport { LogService } from '../../services/log.service';\n\n@Component({\n  selector: 'app-logs',\n  templateUrl: './logs.component.html',\n  styleUrls: ['./logs.component.css']\n})\nexport class LogsComponent implements OnInit {\n  logs: Log[];\n  selectedLog: Log;\n  loaded: boolean = false;\n\n  constructor(private logService: LogService) { }\n\n  ngOnInit(): void {\n\n    this.logService.stateClear.subscribe(clear => {\n      if (clear) {\n        this.selectedLog = {id: '', text: '', date: ''};\n      }\n    });\n    this.logService.getLogs().subscribe(logs => {\n      this.logs = logs;\n      this.loaded = true;\n    });\n  }\n\n  onSelect(log: Log) {\n    // pass the log from logs component to log-form component\n    this.logService.setFormLog(log);\n    // set the selected log temp variable to log selected from list\n    this.selectedLog = log;\n  }\n\n  onDelete(logId: string) {\n    this.logService.deleteLog(logId);\n  }\n\n}\n","<ul class=\"list-group\" *ngIf=\"loaded && logs?.length > 0\">\n    <li (click)=\"onSelect(log)\" *ngFor=\"let log of logs\"\n        class=\"list-group-item d-flex justify-content-between align-items-center\"\n        [class.list-group-item-secondary]=\"selectedLog == log\">\n        <a href=\"#\">{{ log.text }}</a>\n        <span class=\"log-date\">{{ log.date | date: 'short'}}</span>\n        <i (click)=\"onDelete(log.id)\" class=\"fa fa-remove\"></i>\n    </li>\n</ul>\n\n<div *ngIf=\"loaded && logs?.length == 0\">\n    <h5>No logs in the System...</h5>\n</div>\n\n<div *ngIf=\"!loaded\">\n    <h5>Loading</h5>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-dark bg-dark mb-4\">\n    <div class=\"container\">\n        <a href=\"/\" class=\"navbar-brand\">DevLogger</a>\n    </div>\n</nav>","import { Injectable } from '@angular/core';\nimport { Log } from '../models/Log';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/Observable/of';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogService {\n  logs: Log[];\n  private logSource = new BehaviorSubject<Log>({id: null, text: null, date: null});\n  selectedLog = this.logSource.asObservable();\n\n  private stateSource = new BehaviorSubject<boolean>(true);\n  stateClear = this.stateSource.asObservable();\n\n  constructor() {\n    // this.logs = [\n    //   { id: '1', text: 'Generated Components', date: new Date('4/4/2020 10:33:45')},\n    //   { id: '2', text: 'Added Bootstrap', date: new Date('4/5/2020 11:33:45')},\n    //   { id: '3', text: 'Added logs component', date: new Date('4/6/2020 12:33:45')}\n    // ]\n    this.logs = [];\n  }\n\n  getLogs(): Observable<Log[]> {\n    if (localStorage.getItem('logs') === null) {\n      this.logs = [];\n    } else {\n      this.logs = JSON.parse(localStorage.getItem('logs'));\n    }\n    return of(this.logs.sort((a,b) =>{\n      return b.date = a.date;\n    }));\n  }\n\n  setFormLog(log: Log) {\n    this.logSource.next(log);\n  }\n\n  addLog(log: Log) {\n    this.logs.unshift(log);\n    // add to local storage\n    localStorage.setItem('logs', JSON.stringify(this.logs));\n  }\n\n  clearState() {\n    this.stateSource.next(true);\n  }\n\n  updateLog(log: Log) {\n    let logTobeUpdated: Log;\n    for (let item in this.logs) {\n      if (this.logs[item].id == log.id) {\n        this.logs.splice(parseInt(item), 1);\n        logTobeUpdated = {\n          id: log.id,\n          text: log.text,\n          date: new Date()\n        }\n        this.logs.unshift(logTobeUpdated);\n        // add to local storage\n        localStorage.setItem('logs', JSON.stringify(this.logs));\n        break;\n      }\n    }\n  }\n\n  deleteLog(logId: string) {\n    if (confirm('Are you sure?')) {\n      for (let item in this.logs) {\n        if (this.logs[item].id == logId) {\n          this.logs.splice(parseInt(item), 1);\n          // add to local storage\n          localStorage.setItem('logs', JSON.stringify(this.logs));\n          break;\n        }\n      }\n    }\n    \n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}